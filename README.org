#+title: EXATEC STEAM

*  App resume and guide

** To clone & setup the project
*** Clone the project and go to the project directory
#+begin_src shell
git clone https://github.com/CDamianS/ExatecSTEAM.git
#+end_src

*** Create a virtual environment, activate it & install the dependencies
**** Linux
#+begin_src shell
python3 -m venv .venv
source .venv/bin/activate
pip install -r requirements.txt
#+end_src

**** Windows
#+begin_src shell
py -m venv .venv
.venv\Scripts\activate.ps1
pip install -r requirements.txt
#+end_src

*** Generate a secret key and add it to the environment variables
**** Linux
#+begin_src shell
python3 -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
#+end_src

**** Windows
#+begin_src shell
py -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
#+end_src

Then add the generated key to the environment (.env file) variables as `SECRET_KEY`

Example:
#+begin_example
SECRET_KEY=2hb40lab4)zqt0zwt=m_q^q&m11ku)9*ky0)-6hkh3@4*uuwzm
#+end_example
! Don't push the .env file to the repository, it's already ignored in the .gitignore file & it contains sensitive data ! That's why is called SECRET_KEY :)

*** Run the migrations and run the server
**** Linux
#+begin_src shell
python3 manage.py migrate
python3 manage.py runserver
#+end_src
**** Windows
#+begin_src shell
py manage.py migrate
py manage.py runserver
#+end_src

** To contribute to the project
*** Create a new branch
Change \<branch-name> to the name of the branch you want to create.
#+begin_src shell
git checkout -b <branch-name>
#+end_src

If already working on a remote branch, you can pull the latest changes from it and create your local branch.
#+begin_src shell
git checkout -b <branch-name> origin/<branch-name>
#+end_src

*** To commit and push your changes
Add your changes to the staging area, commit them with a meaningful message (try to relate your commits to an issue) and push them to the repo.
#+begin_src shell
git add .
git commit -m "your message"
git push origin <branch-name>

#+end_src

**** To address an issue on your commit message, use the following syntax.
#+begin_src shell
git commit -m "partial progress on issue *<issue-number>"
#+end_src

**** To close an issue on your commit message, use the following syntax.
***** Reserved words are: close, closes, closed, fix, fixes, fixed, resolve, resolves, resolved
#+begin_src shell
git commit -m "<reserved-word> *<issue-number>"
#+end_src

*** Please create a pull request
Then go to the repo and create a pull request, but wait for at least two reviews before merging your branch to the main branch.

*** Be creative and share ideas :)

If you have a request or believe something can be improved, feel free to open an issue and discuss it with the team. The project is still in its early stages, so we're open to any suggestions.
